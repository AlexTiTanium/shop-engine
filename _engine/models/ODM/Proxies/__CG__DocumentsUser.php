<?php

namespace ODM\Proxies\__CG__\Documents;

use Doctrine\ODM\MongoDB\Persisters\DocumentPersister;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class User extends \Documents\User implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    private $__documentPersister__;
    public $__identifier__;
    public $__isInitialized__ = false;
    public function __construct(DocumentPersister $documentPersister, $identifier)
    {
        $this->__documentPersister__ = $documentPersister;
        $this->__identifier__ = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->__documentPersister__->load($this->__identifier__, $this) === null) {
                throw \Doctrine\ODM\MongoDB\DocumentNotFoundException::documentNotFound(get_class($this), $this->__identifier__);
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->__identifier__;
        }
        $this->__load();
        return parent::getId();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setLogin($login)
    {
        $this->__load();
        return parent::setLogin($login);
    }

    public function getLogin()
    {
        $this->__load();
        return parent::getLogin();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setEnable($enable)
    {
        $this->__load();
        return parent::setEnable($enable);
    }

    public function getEnable()
    {
        $this->__load();
        return parent::getEnable();
    }

    public function setForgotPasswordHash($forgotPasswordHash)
    {
        $this->__load();
        return parent::setForgotPasswordHash($forgotPasswordHash);
    }

    public function getForgotPasswordHash()
    {
        $this->__load();
        return parent::getForgotPasswordHash();
    }

    public function setForgotPasswordDate($forgotPasswordDate)
    {
        $this->__load();
        return parent::setForgotPasswordDate($forgotPasswordDate);
    }

    public function getForgotPasswordDate()
    {
        $this->__load();
        return parent::getForgotPasswordDate();
    }

    public function setExpOnline($expOnline)
    {
        $this->__load();
        return parent::setExpOnline($expOnline);
    }

    public function getExpOnline()
    {
        $this->__load();
        return parent::getExpOnline();
    }

    public function setActivationHash($activationHash)
    {
        $this->__load();
        return parent::setActivationHash($activationHash);
    }

    public function getActivationHash()
    {
        $this->__load();
        return parent::getActivationHash();
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }

    public function toFlatArray($removeFromResult = false)
    {
        $this->__load();
        return parent::toFlatArray($removeFromResult);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'date', 'login', 'password', 'email', 'enable', 'forgot_password_hash', 'forgot_password_date', 'exp_online', 'activationHash');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;
            $class = $this->__documentPersister__->getClassMetadata();
            $original = $this->__documentPersister__->load($this->__identifier__);
            if ($original === null) {
                throw \Doctrine\ODM\MongoDB\MongoDBException::documentNotFound(get_class($this), $this->__identifier__);
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
        
    }
}