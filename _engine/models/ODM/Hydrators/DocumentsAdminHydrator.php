<?php

namespace ODM\Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class DocumentsAdminHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['date'])) {
            $value = $data['date'];
            if ($value instanceof \MongoDate) { $date = new \DateTime(); $date->setTimestamp($value->sec); $return = $date; } else { $return = new \DateTime($value); }
            $this->class->reflFields['date']->setValue($document, clone $return);
            $hydratedData['date'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['login'])) {
            $value = $data['login'];
            $return = (string) $value;
            $this->class->reflFields['login']->setValue($document, $return);
            $hydratedData['login'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['password'])) {
            $value = $data['password'];
            $return = (string) $value;
            $this->class->reflFields['password']->setValue($document, $return);
            $hydratedData['password'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['email'])) {
            $value = $data['email'];
            $return = (string) $value;
            $this->class->reflFields['email']->setValue($document, $return);
            $hydratedData['email'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['enable'])) {
            $value = $data['enable'];
            $return = (bool) $value;
            $this->class->reflFields['enable']->setValue($document, $return);
            $hydratedData['enable'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['forgot_password_hash'])) {
            $value = $data['forgot_password_hash'];
            $return = (string) $value;
            $this->class->reflFields['forgot_password_hash']->setValue($document, $return);
            $hydratedData['forgot_password_hash'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['forgot_password_date'])) {
            $value = $data['forgot_password_date'];
            if ($value instanceof \MongoDate) { $date = new \DateTime(); $date->setTimestamp($value->sec); $return = $date; } else { $return = new \DateTime($value); }
            $this->class->reflFields['forgot_password_date']->setValue($document, clone $return);
            $hydratedData['forgot_password_date'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['exp_online'])) {
            $value = $data['exp_online'];
            $return = (int) $value;
            $this->class->reflFields['exp_online']->setValue($document, $return);
            $hydratedData['exp_online'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['activationHash'])) {
            $value = $data['activationHash'];
            $return = (string) $value;
            $this->class->reflFields['activationHash']->setValue($document, $return);
            $hydratedData['activationHash'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['isActivated'])) {
            $value = $data['isActivated'];
            $return = (bool) $value;
            $this->class->reflFields['isActivated']->setValue($document, $return);
            $hydratedData['isActivated'] = $return;
        }
        return $hydratedData;
    }
}